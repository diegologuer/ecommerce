plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	 id "org.sonarqube" version "4.3.1.3277"
	id 'jacoco'
	id 'war'
	
}

sonar {
    properties {
        property 'sonar.host.url', 'http://localhost:9000' // Replace with your SonarQube server URL
        property 'sonar.login', 'squ_d09a8dc8fe205b7d013ca8c3c41d094c19791194' // Replace with your generated SonarQube token
    }
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
        // Ruta a los archivos de c√≥digo fuente de tu proyecto
    sourceDirectories = files('src/main/java')

    // Ruta a los archivos de clases compiladas
    classDirectories = files('build/classes/java/main')
    
}
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

group = 'org.generation'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
  	testImplementation 'org.springframework.boot:spring-boot-starter-test'
  	testImplementation 'org.springframework.security:spring-security-test'
 	runtimeOnly 'com.mysql:mysql-connector-j'
 	testImplementation "org.mockito:mockito-core:3.+"
	
}

tasks.named('test') {
	useJUnitPlatform()
}
